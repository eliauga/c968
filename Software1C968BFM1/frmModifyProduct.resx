<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="epValidator.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>147, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="epValidator.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAABMLAAATCwAAAAAAAAAA
        AABmWlUAZlpVAGZaVQBmWlUAZlpVAGZaVQBmWlUAZlpVAGZaVQBmWlUAZlpVAGJXUwBOR0gAS0VHAExF
        RwBMRUcATEVHAExFRwBMRUcATEVHAExFRwBMRUcAU0pMAEtDRQBmWlU/Z1hTj2dXUZ9nV1GeZ1dRnmdX
        UZ5nV1GeZ1dRnmdXUZ5nV1GeZ1dRnmJTTp5GOzqfQTc3n0I3N59CNzefQjc3n0I3N59CNzefQjc3n0I3
        N59CNzefQjg6kEI7PUFmWlTiYW1t/1x+hP9cfYP/XH2D/1x9g/9cfYP/XH2D/1x9g/9cfYP/XH6E/1d7
        g/8+ZHX/Ol5x/ztecP87XnD/O15w/ztecP87XnD/O15w/ztecP87X3H/Pk1X/0E6O+RnWFLtWIyW/0LX
        +P9C2Pr/Qtj6/0LY+v9C2Pr/Qtj6/0LY+v9C2Pr/RNLx/0qsxP81lrz/K7Xt/yq8+P8qu/f/Krv3/yq7
        9/8qu/f/Krv3/yq89/8quvX/OGyF/0I4Oe9mWVOJY2Ri/Eq91v9A3f//Qdv+/0Hb/v9B2/7/Qdv+/0Hb
        /v9B2/7/VJup/2FZVf9FQEL/NXua/ym//P8pv/z/Kb/8/ym//P8pv/z/Kb/8/ynB//8vn87/P0RL/EI5
        OotmWlUdZ1hSyFqDiv9C1vf/Qdv//0Hb/v9B2/7/Qdv+/0Hb/v9C1/j/XXp//2JTTv9GOzv/O1pr/yq6
        9f8pv/z/Kb/8/ym//P8pv/z/Kb/9/yq69P86Y3f/Qjg5yUI7PR5mWlUAZllUWmVeWvdOrsP/Qd3//0Hb
        /v9B2/7/Qdv+/0Hb/v9B2/7/UqGy/2BdW/9EREj/NIKk/ym//P8pv/z/Kb/8/ym//P8pv/z/KcH//zKQ
        uP9BPkH4Qjo7XEA5OwBmWlUAZlpVC2dYUq9edXj/RM/u/0Hc//9B2/7/Qdv+/0Hb/v9B2/7/Qtn6/0e2
        0P8zn8r/Kbz3/ym//P8pv/z/Kb/8/ym//P8pwP3/K7Pq/zxVY/9CODmwQzw+DEM7PQBmWlUAZlpVAGZa
        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
        /wA=
</value>
  </data>
</root>